@using ApartmentWeb.Enums;
@using ApartmentWeb.Models.Application;
@model PersonalReference
<div class="personal-reference-section">
    <!-- Optional Personal Reference Section -->
    <div class="row align-items-center mb-3 @(Model.AllowElectiveRequire ? "" : "d-none")">
        @Html.Label(Model.ElectiveRequireDisplay, new { @class = "col-md-6 form-label fw-bold text-dark" })
        <div class="col-md-6">
            @Html.EnumDropDownListFor(model => model.ElectiveRequireValue, "-", new { @visibletogglefor = nameof(PersonalReference), @class = "yesno_visible_toggle form-control form-control-lg" })
            @Html.ValidationMessageFor(model => model.ElectiveRequireValue, "", new { @class = "text-danger mt-1" })
        </div>
    </div>
    
    <div id="@nameof(PersonalReference)" @(Model.ElectiveRequireValue == YesNo.Yes ? "" : "style=display:none;") class="personal-reference-details">
        <div class="row mb-4">
            <!-- Name -->
            <div class="col-md-4 mb-3 mb-md-0">
                @Html.LabelFor(model => model.Name, new { @class = "form-label fw-bold text-dark" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger mt-1" })
            </div>
            
            <!-- Relationship -->
            <div class="col-md-4 mb-3 mb-md-0">
                @Html.LabelFor(model => model.Relationship, new { @class = "form-label fw-bold text-dark" })
                @Html.EditorFor(model => model.Relationship, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                @Html.ValidationMessageFor(model => model.Relationship, "", new { @class = "text-danger mt-1" })
            </div>
            
            <!-- Phone Number -->
            <div class="col-md-4">
                @Html.LabelFor(model => model.PhoneNum, new { @class = "form-label fw-bold text-dark" })
                @Html.EditorFor(model => model.PhoneNum, new { htmlAttributes = new { @class = "form-control form-control-lg phone-mask" } }) 
                @Html.ValidationMessageFor(model => model.PhoneNum, "", new { @class = "text-danger mt-1" })
            </div>
        </div>
    </div>
</div>